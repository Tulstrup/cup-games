{"id":"src/objects/redhat.ts","dependencies":[{"name":"/Users/be0888/Code/cup-games/games/mapgame/tsconfig.json","includedInParent":true,"mtime":1618391703095},{"name":"/Users/be0888/Code/cup-games/games/mapgame/package.json","includedInParent":true,"mtime":1618393163694}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Redhat = void 0;\n\nvar Redhat = /*#__PURE__*/function (_Phaser$GameObjects$I) {\n  _inherits(Redhat, _Phaser$GameObjects$I);\n\n  var _super = _createSuper(Redhat);\n\n  function Redhat(aParams) {\n    var _this;\n\n    _classCallCheck(this, Redhat);\n\n    _this = _super.call(this, aParams.scene, aParams.x, aParams.y, aParams.texture, aParams.frame);\n\n    _this.initSprite();\n\n    _this.initPhysics();\n\n    _this.scene.add.existing(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Redhat, [{\n    key: \"initSprite\",\n    value: function initSprite() {\n      this.setScale(0.5);\n    }\n  }, {\n    key: \"initPhysics\",\n    value: function initPhysics() {\n      this.scene.physics.world.enable(this);\n      this.body.setVelocity(100, 200);\n      this.body.setBounce(1, 1);\n      this.body.setCollideWorldBounds(true);\n    }\n  }]);\n\n  return Redhat;\n}(Phaser.GameObjects.Image);\n\nexports.Redhat = Redhat;"},"sourceMaps":{"js":{"mappings":[{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":30,"column":4}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":35,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":35,"column":18}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":35,"column":25}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":35,"column":27}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":36,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":38,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":40,"column":30}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":17},"generated":{"line":40,"column":37}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":40,"column":38}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":43}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":25},"generated":{"line":40,"column":45}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":40,"column":52}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":33},"generated":{"line":40,"column":53}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":54}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":36},"generated":{"line":40,"column":56}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":40,"column":63}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":40,"column":64}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":65}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":47},"generated":{"line":40,"column":67}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":54},"generated":{"line":40,"column":74}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":55},"generated":{"line":40,"column":75}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":82}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":64},"generated":{"line":40,"column":84}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":71},"generated":{"line":40,"column":91}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":72},"generated":{"line":40,"column":92}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":40,"column":97}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":42,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":42,"column":10}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":42,"column":20}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":44,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":44,"column":10}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":44,"column":21}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":46,"column":10}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":15}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":46,"column":16}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":19}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":46,"column":20}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":28}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":48,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":12,"column":3},"generated":{"line":49,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":53,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":53,"column":33}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":54,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":15,"column":9},"generated":{"line":54,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":54,"column":19}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":15,"column":18},"generated":{"line":54,"column":20}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":54,"column":23}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":16,"column":3},"generated":{"line":55,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":58,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":18,"column":21},"generated":{"line":58,"column":34}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":59,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":16}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":59,"column":17}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":24}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":59,"column":25}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":30}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":59,"column":31}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":37}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":36},"generated":{"line":59,"column":38}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":59,"column":42}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":60,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":60,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":60,"column":15}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":60,"column":16}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":60,"column":27}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":60,"column":28}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":60,"column":31}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":60,"column":33}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":60,"column":36}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":61,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":61,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":61,"column":15}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":14},"generated":{"line":61,"column":16}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":61,"column":25}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":61,"column":26}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":61,"column":27}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":61,"column":29}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":61,"column":30}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":62,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":62,"column":11}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":62,"column":15}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":14},"generated":{"line":62,"column":16}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":62,"column":37}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":36},"generated":{"line":62,"column":38}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":62,"column":42}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":63,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":67,"column":2}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":34},"generated":{"line":67,"column":8}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":67,"column":9}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":67,"column":20}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":47},"generated":{"line":67,"column":21}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":0}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":7}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":8}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":14}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":17}},{"source":"src/objects/redhat.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":69,"column":23}}],"sources":{"src/objects/redhat.ts":"import { IImageConstructor } from '../interfaces/image.interface';\n\nexport class Redhat extends Phaser.GameObjects.Image {\n  body: Phaser.Physics.Arcade.Body;\n\n  constructor(aParams: IImageConstructor) {\n    super(aParams.scene, aParams.x, aParams.y, aParams.texture, aParams.frame);\n\n    this.initSprite();\n    this.initPhysics();\n    this.scene.add.existing(this);\n  }\n\n  private initSprite() {\n    this.setScale(0.5);\n  }\n\n  private initPhysics() {\n    this.scene.physics.world.enable(this);\n    this.body.setVelocity(100, 200);\n    this.body.setBounce(1, 1);\n    this.body.setCollideWorldBounds(true);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"dd7e4b5d03ee35e937a961c165940f5b","cacheData":{"env":{}}}